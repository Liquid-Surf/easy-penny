include:
  - project: 'vincenttunru/ci-templates'
    file: '/spa.gitlab-ci.yml'

cache:
  paths:
  - node_modules/


stages:
  - build
  - test
  - release

build:
  image: node:14
  stage: build
  script:
  - npm ci
  - rm src/pages/server_ui.tsx
  - npm run build
  artifacts:
    paths:
    - node_modules
    - out

build_integrated:
  image: node:14
  stage: build
  script:
  - npm ci
  - rm src/pages/index.tsx
  - rm src/pages/explore.tsx
  - rm src/pages/turtle.tsx
  - mv src/pages/server_ui.tsx src/pages/\[\[...slug\]\].tsx
  - NEXT_PUBLIC_MODE="integrate" npm run build
  - mv out server-ui
  - mv server-ui/[[...slug]]/index.html server-ui/index.html
  artifacts:
    paths:
    - server-ui

test:
  image: node:14
  stage: test
  script:
  - npm ci
  - npm test

publish_npm:
  stage: release
  image: node:14
  dependencies:
    - build
    - build_integrated
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $NPM_TOKEN'
      when: always
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
    - export NEW_VERSION="0.$CI_PIPELINE_ID.$CI_JOB_ID"
    # `out` is in `.gitignore` - by renaming it `standalone`,
    # the standalone app will be available pre-built on npm as well:
    - mv out standalone
    - npm version --no-git-tag-version $NEW_VERSION
    - npx publint
    - npm publish
    - npm pack
    - mv "penny-pod-inspector-${NEW_VERSION}.tgz" package.tgz
  environment:
    name: production
    url: https://www.npmjs.com/package/$CI_PROJECT_NAME
  artifacts:
    expire_in: 1 month
    paths:
      - package.tgz
